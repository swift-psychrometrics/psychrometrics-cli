# Create a release when a new tag is pushed.
#
name: Publish Development Image

on:
  workflow_call:
    inputs:
      registry:
        description: 'The image registry to use.'
        default: 'ghcr.io'
        required: false
        type: string
      image-name:
        description: 'The docker image name to use.'
        default: ${{ github.repository }}
        required: false
        type: string
      tag:
        description: 'The docker image tag to use.'
        default: 'latest'
        required: false
        type: string
      username:
        description: 'The username for the image registry.'
        default: ${{ github.actor }}
        required: false
        type: string
      file:
        description: 'The location of the Dockerfile to use.'
        default: ./Dockerfile
        required: false
        type: string
      push:
        default: false
        required: false
        type: boolean
    secrets:
      token:
        description: 'The authentication to use for the registry.'
        required: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.username }}
          password: ${{ secrets.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ inputs.registry }}/${{ inputs.image-name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=${{ inputs.tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ${{ inputs.file }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
